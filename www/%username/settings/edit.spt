from liberapay.exceptions import AccountIsPasswordless, TooManyAttempts
from liberapay.models.participant import Participant
from liberapay.utils import form_post_success, get_participant

[---]

request.allow('POST')

body = request.body

p = get_participant(state, restrict=True, allow_member=True)

if 'new-password' in body or 'action' in body:
    if not p.is_person:
        raise response.error(403)
    action = request.body.get_choice('action', ('set', 'unset'), default='set')

    # Check the old password, if necessary
    if p.session_type == 'em':
        pass  # user logged in via email, allow resetting password
    else:
        try:
            p2 = Participant.authenticate_with_password(
                p.id, body.get('cur-password'), context='change_password'
            )
        except AccountIsPasswordless:
            pass  # user doesn't have a password yet, allow adding one
        else:
            if not p2:
                raise response.redirect(p.path('settings/?password_mismatch=1'))
            del p2

    if action == 'unset':
        p.unset_password()
        form_post_success(state, msg=_("Your account is now passwordless."))

    # Update the password
    p.update_password('new-password')
    form_post_success(state, msg=_("Your password has been changed."))

elif 'privacy' in body:
    response.redirect(p.path('edit/privacy'), code=307)

elif 'username' in body:
    response.redirect(p.path('edit/username'), code=307)

elif 'main_currency' in body:
    response.redirect(p.path('edit/currencies'), code=307)

else:
    raise response.error(400, "no known key found in body")

[---] text/html
